diff --git a/brave/BUILD.gn b/brave/BUILD.gn
index c3907daf6..ef9cd2f6c 100644
--- a/brave/BUILD.gn
+++ b/brave/BUILD.gn
@@ -4,6 +4,7 @@ import("//brave/build/config.gni")
 import("//ui/base/ui_features.gni")
 import("//third_party/icu/config.gni")
 import("//build/config/locales.gni")
+import("//build/config/sysroot.gni")
 import("//build/util/process_version.gni")
 import("//extensions/buildflags/buildflags.gni")
 import("//media/cdm/library_cdm/cdm_paths.gni")
@@ -205,8 +205,11 @@ group("create_dist") {
     }
   }
   if (is_linux) {
+    if (use_sysroot) {
+        deps += [ "//chrome/installer/linux:$linux_channel" ]
+    }
+
     deps += [
-      "//chrome/installer/linux:$linux_channel",
       "//brave/app/linux:dist_resources",
       ":theme_files",
     ]
@@ -328,9 +331,12 @@ if (!is_android && !is_ios) {
       ":packed_resources",
       "build/$target_os:brave",
       "//chrome:packed_resources",
-      "//third_party/icu:icudata",
     ]
 
+    if (icu_use_data_file) {
+      deps += [ "//third_party/icu:icudata" ]
+    }
+
     if (!is_mac) {
       sources += [
         "$root_out_dir/brave_resources.pak",
@@ -339,10 +345,13 @@ if (!is_android && !is_ios) {
         "$root_out_dir/$brave_exe",
         "$root_out_dir/chrome_100_percent.pak",
         "$root_out_dir/chrome_200_percent.pak",
-        "$root_out_dir/icudtl.dat",
         "$root_out_dir/resources.pak",
       ]
 
+      if (icu_use_data_file) {
+        sources += [ "$root_out_dir/icudtl.dat" ]
+      }
+
       if (v8_use_external_startup_data) {
         deps += [ "//v8" ]
 
diff --git a/brave/vendor/adblock_rust_ffi/src/wrapper.cpp b/brave/vendor/adblock_rust_ffi/src/wrapper.cpp
index f13a777..2b4e90a 100644
--- a/brave/vendor/adblock_rust_ffi/src/wrapper.cpp
+++ b/brave/vendor/adblock_rust_ffi/src/wrapper.cpp
@@ -1,4 +1,5 @@
 #include "wrapper.hpp"
+#include <cstring>
 #include <iostream>
 using namespace std;
 
diff --git a/brave/vendor/bat-native-ledger/src/bat/ledger/internal/contribution/contribution.cc b/brave/vendor/bat-native-ledger/src/bat/ledger/internal/contribution/contribution.cc
index eeaec36bc..c919332b0 100644
--- a/brave/vendor/bat-native-ledger/src/bat/ledger/internal/contribution/contribution.cc
+++ b/brave/vendor/bat-native-ledger/src/bat/ledger/internal/contribution/contribution.cc
@@ -7,6 +7,7 @@
 
 #include <algorithm>
 #include <cmath>
+#include <ctime>
 #include <memory>
 #include <utility>
 #include <vector>
diff --git a/brave/vendor/bat-native-usermodel/src/transformation.cc b/brave/vendor/bat-native-usermodel/src/transformation.cc
index f6e0a17..86d2a10 100644
--- a/brave/vendor/bat-native-usermodel/src/transformation.cc
+++ b/brave/vendor/bat-native-usermodel/src/transformation.cc
@@ -4,6 +4,7 @@
  * You can obtain one at http://mozilla.org/MPL/2.0/. */
  
 #include "transformation.h"
+#include <algorithm>
 #include <codecvt>
 #include <math.h>
 namespace usermodel {
diff --git a/brave/vendor/bat-native-ads/src/bat/ads/internal/logging.h b/brave/vendor/bat-native-ads/src/bat/ads/internal/logging.h
index 4f927a7d1..6367a43cc 100644
--- a/brave/vendor/bat-native-ads/src/bat/ads/internal/logging.h
+++ b/brave/vendor/bat-native-ads/src/bat/ads/internal/logging.h
@@ -52,7 +52,7 @@ void Log(
 //   8 Database queries
 
 #define BLOG(verbose_level, stream) ads::Log(__FILE__, __LINE__, \
-    verbose_level, (std::ostringstream() << stream).str());
+    verbose_level, static_cast<std::ostringstream &>(std::ostringstream() << stream).str());
 
 // You can also do conditional verbose logging when some extra computation and
 // preparation for logs is not needed:

diff --git a/brave/vendor/bat-native-confirmations/src/bat/confirmations/internal/logging.h b/brave/vendor/bat-native-confirmations/src/bat/confirmations/internal/logging.h
index 73f259f0c..8ed1f196f 100644
--- a/brave/vendor/bat-native-confirmations/src/bat/confirmations/internal/logging.h
+++ b/brave/vendor/bat-native-confirmations/src/bat/confirmations/internal/logging.h
@@ -51,7 +51,7 @@ void Log(
 //   8 Database queries
 
 #define BLOG(verbose_level, stream) confirmations::Log(__FILE__, \
-    __LINE__, verbose_level, (std::ostringstream() << stream).str());
+    __LINE__, verbose_level, static_cast<std::ostringstream &>(std::ostringstream() << stream).str());
 
 // You can also do conditional verbose logging when some extra computation and
 // preparation for logs is not needed:
diff --git a/brave/vendor/bat-native-ledger/src/bat/ledger/internal/logging.h b/brave/vendor/bat-native-ledger/src/bat/ledger/internal/logging.h
index fa62ecbef..347819840 100644
--- a/brave/vendor/bat-native-ledger/src/bat/ledger/internal/logging.h
+++ b/brave/vendor/bat-native-ledger/src/bat/ledger/internal/logging.h
@@ -52,7 +52,7 @@ void Log(
 //   8 Database queries
 
 #define BLOG(verbose_level, stream) ledger::Log(__FILE__, __LINE__, \
-    verbose_level, (std::ostringstream() << stream).str());
+    verbose_level, static_cast<std::ostringstream &>(std::ostringstream() << stream).str());
 
 // You can also do conditional verbose logging when some extra computation and
 // preparation for logs is not needed:

diff --git a/brave/components/brave_rewards/browser/logging.h b/brave/components/brave_rewards/browser/logging.h
index c3171e9b2..b96c5b447 100644
--- a/brave/components/brave_rewards/browser/logging.h
+++ b/brave/components/brave_rewards/browser/logging.h
@@ -11,7 +11,7 @@
 namespace brave_rewards {
 
 #define BLOG(verbose_level, stream) Log(__FILE__, __LINE__, \
-    verbose_level, (std::ostringstream() << stream).str());
+    verbose_level, static_cast<std::ostringstream &>(std::ostringstream() << stream).str());
 
 #define BLOG_IF(verbose_level, condition, stream) \
     !(condition) ? (void) 0 : BLOG(verbose_level, stream)

